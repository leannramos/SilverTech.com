@model Telerik.Sitefinity.Frontend.Search.Mvc.Models.ISearchBoxModel

@using BankCore.Mvc.Services.Locations;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Model;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using BankCore.Mvc.Models.Locations;
@using Telerik.Sitefinity.Web;

@{
                /**/

                var locationsService = new LocationsService();
                var cities = locationsService.GetCities();
                var searchTextBoxId = Guid.NewGuid();
                var searchButtonId = Guid.NewGuid();
                var searchQuery = ViewBag.SearchQuery;
                var noneSelected = !cities.Any(x => x == searchQuery);
}

@(!String.IsNullOrEmpty(Model.CssClass) ?
                            Html.Raw(String.Format("<div class=\"{0} form-inline\">", HttpUtility.HtmlAttributeEncode(Model.CssClass))) :
                            Html.Raw("<div class=\"form-inline\">"))
<label>City Search</label>
<div class="select-box">
    <select aria-label="city search" title="@Html.Resource("SearchInput")" placeholder="@Model.BackgroundHint" id="@searchTextBoxId">
        @if (noneSelected)
        {
            <option value="" selected="selected">Find a Branch</option>
        }
        else
        {
            <option value="">Find a Branch</option>
        }
        <option value="@Url.Content(SiteMapBase.GetActualCurrentNode().Url)">All Branches</option>
        @foreach (var city in cities)
        {
            if (city == ViewBag.SearchQuery)
            {
                <option value="@city" selected="selected">@city</option>
            }
            else
            {
                <option value="@city">@city</option>
            }

        }
    </select>
</div>
<button type="button" style="display:none;" class="btn btn-primary" id="@(searchButtonId)">@Html.Resource("SearchLabel")</button>

<input type="hidden" data-sf-role="resultsUrl" value="@(Model.ResultsUrl)" />
<input type="hidden" data-sf-role="indexCatalogue" value="@(Model.IndexCatalogue)" />
<input type="hidden" data-sf-role="wordsMode" value="@(Model.WordsMode.ToString())" />
<input type="hidden" data-sf-role="disableSuggestions" value='@(Model.DisableSuggestions ? ("true") : ("false"))' />
<input type="hidden" data-sf-role="minSuggestionLength" value="@(Model.MinSuggestionLength)" />
<input type="hidden" data-sf-role="suggestionFields" value="@(Model.SuggestionFields)" />
<input type="hidden" data-sf-role="language" value="@(Model.Language)" />
<input type="hidden" data-sf-role="suggestionsRoute" value="@(Model.SuggestionsRoute)" />
<input type="hidden" data-sf-role="searchTextBoxId" value='@("#" + searchTextBoxId.ToString())' />
<input type="hidden" data-sf-role="searchButtonId" value='@("#" + searchButtonId.ToString())' />
</div>
<script type="text/javascript">
    $('@("#" + searchTextBoxId.ToString())').on('change', function () {

        if ($(this).children("option:selected").text() == "All Branches") {
            window.location.href = $(this).children("option:selected").val()
        }
        else {
            $('@("#" + searchButtonId.ToString())').click();
        }

        });

</script>




@* The inline editing functionality is loading jQuery too. *@




@Html.Script(Url.WidgetContent("Mvc/Scripts/SearchBox/Search-box.js"), "bottom")